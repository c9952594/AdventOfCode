let example =
    [| 
        "forward 5"
        "down 5"
        "forward 8"
        "up 3"
        "down 8"
        "forward 2"
    |]

let input =
    [| 
        "forward 6"
        "down 2"
        "forward 2"
        "down 8"
        "forward 3"
        "down 6"
        "down 8"
        "down 9"
        "forward 7"
        "forward 8"
        "down 9"
        "down 8"
        "down 9"
        "up 8"
        "forward 1"
        "down 7"
        "down 3"
        "forward 3"
        "forward 1"
        "down 3"
        "forward 3"
        "forward 1"
        "up 8"
        "down 5"
        "down 1"
        "forward 6"
        "forward 2"
        "up 9"
        "down 3"
        "down 8"
        "down 3"
        "down 3"
        "up 2"
        "down 7"
        "down 3"
        "up 5"
        "forward 4"
        "down 9"
        "forward 6"
        "forward 3"
        "forward 1"
        "forward 3"
        "down 2"
        "up 9"
        "down 4"
        "forward 6"
        "down 3"
        "forward 2"
        "down 2"
        "up 5"
        "up 1"
        "forward 3"
        "forward 6"
        "down 6"
        "forward 7"
        "forward 1"
        "down 3"
        "down 8"
        "forward 2"
        "down 7"
        "up 1"
        "up 2"
        "forward 5"
        "down 8"
        "down 8"
        "forward 9"
        "forward 7"
        "forward 2"
        "forward 7"
        "up 6"
        "up 9"
        "down 4"
        "forward 4"
        "forward 4"
        "up 1"
        "down 7"
        "forward 9"
        "forward 3"
        "down 6"
        "down 9"
        "forward 7"
        "forward 4"
        "up 7"
        "up 6"
        "up 8"
        "down 9"
        "forward 1"
        "down 1"
        "forward 8"
        "down 7"
        "forward 5"
        "down 3"
        "down 3"
        "down 8"
        "down 8"
        "down 4"
        "up 4"
        "forward 3"
        "down 8"
        "down 9"
        "up 3"
        "up 8"
        "down 9"
        "up 5"
        "forward 2"
        "forward 5"
        "forward 5"
        "down 8"
        "forward 9"
        "forward 8"
        "down 5"
        "down 9"
        "forward 6"
        "forward 2"
        "forward 3"
        "up 1"
        "forward 1"
        "up 2"
        "up 2"
        "forward 4"
        "forward 8"
        "forward 5"
        "down 1"
        "up 4"
        "forward 5"
        "up 7"
        "down 5"
        "down 5"
        "forward 8"
        "up 2"
        "down 7"
        "down 6"
        "down 5"
        "down 5"
        "down 1"
        "down 8"
        "forward 9"
        "forward 2"
        "up 6"
        "up 4"
        "down 8"
        "forward 1"
        "forward 2"
        "down 2"
        "forward 7"
        "forward 7"
        "forward 3"
        "forward 6"
        "forward 8"
        "down 3"
        "forward 6"
        "up 5"
        "down 3"
        "down 8"
        "up 1"
        "forward 1"
        "down 7"
        "down 3"
        "up 5"
        "forward 6"
        "forward 8"
        "forward 9"
        "up 5"
        "up 5"
        "up 5"
        "forward 8"
        "up 5"
        "down 6"
        "down 7"
        "down 5"
        "up 7"
        "up 1"
        "up 3"
        "forward 8"
        "up 9"
        "down 7"
        "down 4"
        "up 6"
        "up 8"
        "up 9"
        "up 9"
        "forward 5"
        "up 5"
        "forward 2"
        "forward 2"
        "forward 6"
        "up 2"
        "down 8"
        "up 2"
        "forward 5"
        "down 9"
        "up 7"
        "down 9"
        "forward 1"
        "forward 8"
        "up 1"
        "forward 7"
        "forward 2"
        "down 3"
        "forward 3"
        "forward 2"
        "up 9"
        "forward 4"
        "forward 9"
        "down 9"
        "forward 5"
        "forward 1"
        "forward 5"
        "forward 8"
        "up 5"
        "forward 1"
        "down 4"
        "up 8"
        "up 4"
        "up 7"
        "forward 4"
        "down 1"
        "up 6"
        "forward 6"
        "down 2"
        "down 7"
        "forward 4"
        "up 7"
        "forward 7"
        "forward 9"
        "down 5"
        "up 5"
        "forward 4"
        "down 6"
        "forward 1"
        "up 8"
        "up 8"
        "down 8"
        "down 7"
        "forward 7"
        "down 3"
        "forward 7"
        "down 3"
        "down 5"
        "down 4"
        "up 8"
        "down 2"
        "down 2"
        "up 5"
        "forward 9"
        "up 9"
        "forward 2"
        "up 4"
        "forward 4"
        "down 2"
        "down 7"
        "forward 7"
        "down 1"
        "down 6"
        "down 4"
        "forward 6"
        "up 4"
        "forward 4"
        "down 6"
        "down 8"
        "down 3"
        "forward 7"
        "down 3"
        "forward 7"
        "down 7"
        "forward 4"
        "up 9"
        "down 5"
        "forward 7"
        "forward 7"
        "up 6"
        "down 3"
        "forward 9"
        "down 1"
        "forward 4"
        "up 9"
        "down 3"
        "up 9"
        "down 5"
        "up 6"
        "forward 1"
        "forward 9"
        "up 4"
        "down 3"
        "forward 1"
        "down 7"
        "down 2"
        "forward 2"
        "down 6"
        "up 4"
        "down 4"
        "up 9"
        "down 3"
        "down 9"
        "down 4"
        "down 1"
        "up 8"
        "down 2"
        "up 1"
        "forward 5"
        "forward 9"
        "forward 1"
        "up 4"
        "forward 5"
        "down 7"
        "up 6"
        "down 3"
        "forward 8"
        "down 1"
        "down 5"
        "forward 5"
        "down 5"
        "down 7"
        "down 8"
        "down 7"
        "up 6"
        "forward 8"
        "down 8"
        "forward 6"
        "down 6"
        "down 7"
        "down 3"
        "forward 2"
        "down 6"
        "down 8"
        "down 7"
        "down 3"
        "up 1"
        "down 7"
        "forward 8"
        "forward 2"
        "forward 5"
        "down 4"
        "up 4"
        "forward 9"
        "down 9"
        "forward 6"
        "down 7"
        "down 4"
        "down 8"
        "up 9"
        "forward 7"
        "down 4"
        "forward 7"
        "forward 1"
        "forward 7"
        "down 9"
        "down 7"
        "forward 3"
        "forward 3"
        "forward 2"
        "down 5"
        "up 5"
        "forward 5"
        "down 2"
        "forward 7"
        "forward 9"
        "forward 7"
        "down 7"
        "down 9"
        "down 5"
        "forward 2"
        "up 5"
        "down 3"
        "forward 7"
        "down 4"
        "down 3"
        "up 5"
        "down 6"
        "down 3"
        "up 4"
        "forward 3"
        "down 1"
        "forward 6"
        "forward 6"
        "down 8"
        "forward 9"
        "down 2"
        "up 3"
        "down 4"
        "down 5"
        "forward 3"
        "down 9"
        "forward 2"
        "up 3"
        "up 4"
        "forward 9"
        "down 2"
        "forward 9"
        "forward 3"
        "down 4"
        "down 2"
        "down 5"
        "down 4"
        "forward 4"
        "down 1"
        "down 9"
        "down 2"
        "forward 8"
        "down 5"
        "forward 5"
        "up 7"
        "down 5"
        "down 2"
        "forward 5"
        "up 4"
        "down 5"
        "up 3"
        "forward 7"
        "down 9"
        "forward 5"
        "forward 2"
        "forward 1"
        "down 7"
        "down 9"
        "down 2"
        "up 2"
        "up 2"
        "up 4"
        "down 4"
        "down 7"
        "down 3"
        "forward 5"
        "forward 3"
        "up 6"
        "down 6"
        "up 6"
        "up 9"
        "forward 8"
        "forward 4"
        "up 3"
        "forward 1"
        "forward 2"
        "up 5"
        "forward 5"
        "forward 8"
        "forward 7"
        "forward 4"
        "down 1"
        "down 8"
        "down 1"
        "forward 3"
        "up 1"
        "forward 7"
        "forward 4"
        "down 8"
        "forward 7"
        "forward 9"
        "forward 3"
        "down 9"
        "down 9"
        "down 3"
        "up 6"
        "up 1"
        "down 4"
        "forward 5"
        "forward 4"
        "forward 6"
        "forward 8"
        "down 6"
        "down 3"
        "forward 5"
        "forward 6"
        "down 4"
        "down 2"
        "up 3"
        "down 3"
        "down 7"
        "down 5"
        "down 5"
        "forward 6"
        "down 4"
        "forward 1"
        "up 2"
        "forward 3"
        "down 1"
        "down 4"
        "down 9"
        "down 7"
        "down 9"
        "forward 9"
        "down 6"
        "down 3"
        "down 2"
        "down 5"
        "up 8"
        "forward 5"
        "forward 5"
        "forward 4"
        "up 5"
        "forward 1"
        "down 9"
        "down 1"
        "up 5"
        "forward 8"
        "forward 6"
        "forward 5"
        "down 1"
        "up 5"
        "down 8"
        "up 7"
        "down 8"
        "down 2"
        "down 3"
        "forward 2"
        "up 4"
        "down 6"
        "up 6"
        "down 3"
        "down 7"
        "up 3"
        "forward 4"
        "down 3"
        "forward 4"
        "up 9"
        "forward 5"
        "down 2"
        "forward 7"
        "forward 5"
        "up 3"
        "up 2"
        "forward 2"
        "down 8"
        "down 1"
        "down 3"
        "up 5"
        "down 4"
        "forward 4"
        "down 1"
        "forward 9"
        "down 3"
        "down 7"
        "down 4"
        "down 4"
        "forward 7"
        "up 5"
        "forward 4"
        "down 8"
        "up 4"
        "forward 6"
        "down 1"
        "up 4"
        "forward 4"
        "down 6"
        "up 5"
        "up 1"
        "forward 2"
        "down 5"
        "forward 8"
        "forward 6"
        "down 8"
        "down 7"
        "down 7"
        "down 1"
        "forward 5"
        "forward 7"
        "forward 7"
        "forward 7"
        "up 3"
        "forward 9"
        "forward 1"
        "down 9"
        "forward 4"
        "up 8"
        "forward 1"
        "forward 5"
        "forward 4"
        "down 2"
        "forward 4"
        "forward 9"
        "forward 3"
        "down 1"
        "forward 4"
        "forward 9"
        "forward 5"
        "down 5"
        "down 5"
        "forward 7"
        "down 3"
        "forward 4"
        "down 6"
        "forward 7"
        "down 2"
        "down 1"
        "down 5"
        "forward 4"
        "forward 9"
        "down 4"
        "forward 2"
        "down 8"
        "up 5"
        "down 9"
        "forward 8"
        "down 3"
        "up 6"
        "down 2"
        "down 4"
        "forward 4"
        "up 2"
        "down 4"
        "down 4"
        "up 7"
        "down 6"
        "forward 4"
        "down 7"
        "forward 3"
        "down 1"
        "up 1"
        "down 2"
        "down 6"
        "down 4"
        "up 3"
        "down 6"
        "up 2"
        "down 6"
        "forward 3"
        "down 9"
        "forward 5"
        "down 5"
        "down 9"
        "down 9"
        "down 7"
        "forward 9"
        "forward 8"
        "forward 9"
        "up 9"
        "forward 7"
        "forward 4"
        "forward 4"
        "up 5"
        "forward 2"
        "down 1"
        "up 9"
        "forward 2"
        "forward 7"
        "forward 1"
        "down 9"
        "forward 9"
        "up 8"
        "up 1"
        "up 7"
        "up 7"
        "down 5"
        "forward 2"
        "forward 8"
        "forward 6"
        "down 7"
        "forward 1"
        "down 9"
        "down 4"
        "down 4"
        "down 1"
        "up 7"
        "forward 4"
        "forward 6"
        "up 5"
        "forward 2"
        "down 9"
        "down 7"
        "forward 1"
        "forward 2"
        "down 5"
        "forward 3"
        "forward 8"
        "forward 6"
        "forward 3"
        "forward 2"
        "down 1"
        "forward 1"
        "forward 1"
        "forward 3"
        "down 9"
        "up 9"
        "down 9"
        "down 6"
        "forward 7"
        "down 6"
        "forward 9"
        "down 9"
        "down 7"
        "down 1"
        "down 9"
        "up 9"
        "down 6"
        "forward 9"
        "down 6"
        "forward 3"
        "down 8"
        "up 5"
        "forward 5"
        "forward 8"
        "up 3"
        "down 8"
        "up 6"
        "forward 4"
        "down 2"
        "forward 6"
        "down 9"
        "forward 6"
        "forward 4"
        "forward 9"
        "forward 3"
        "down 2"
        "down 4"
        "forward 5"
        "down 9"
        "up 7"
        "forward 4"
        "up 1"
        "forward 1"
        "down 6"
        "forward 3"
        "forward 7"
        "forward 2"
        "forward 2"
        "down 5"
        "down 9"
        "down 3"
        "down 5"
        "up 3"
        "forward 1"
        "down 2"
        "down 4"
        "down 1"
        "up 9"
        "up 5"
        "up 1"
        "down 1"
        "up 9"
        "down 5"
        "up 3"
        "up 3"
        "down 7"
        "forward 4"
        "down 6"
        "forward 2"
        "forward 7"
        "forward 4"
        "down 2"
        "forward 6"
        "forward 2"
        "down 3"
        "up 3"
        "up 9"
        "forward 9"
        "forward 9"
        "forward 6"
        "down 8"
        "down 1"
        "forward 9"
        "up 1"
        "down 6"
        "forward 6"
        "up 5"
        "forward 2"
        "forward 6"
        "down 9"
        "forward 1"
        "forward 8"
        "down 8"
        "forward 4"
        "forward 7"
        "up 6"
        "up 1"
        "forward 7"
        "forward 3"
        "forward 2"
        "down 4"
        "down 7"
        "down 7"
        "down 1"
        "down 6"
        "forward 1"
        "down 9"
        "up 9"
        "up 9"
        "down 2"
        "down 2"
        "forward 5"
        "up 2"
        "forward 7"
        "up 5"
        "down 9"
        "forward 7"
        "forward 2"
        "down 8"
        "up 1"
        "down 5"
        "forward 6"
        "down 8"
        "down 7"
        "forward 4"
        "up 2"
        "down 8"
        "forward 2"
        "down 5"
        "down 4"
        "down 9"
        "down 1"
        "down 9"
        "down 6"
        "down 3"
        "forward 1"
        "forward 6"
        "up 1"
        "up 1"
        "up 9"
        "down 2"
        "down 2"
        "forward 5"
        "down 3"
        "forward 4"
        "down 3"
        "down 7"
        "down 7"
        "forward 4"
        "up 3"
        "forward 4"
        "down 3"
        "forward 8"
        "forward 1"
        "up 2"
        "up 1"
        "forward 1"
        "down 6"
        "down 1"
        "down 3"
        "forward 7"
        "down 7"
        "forward 4"
        "forward 5"
        "forward 3"
        "down 5"
        "forward 9"
        "forward 5"
        "down 7"
        "forward 6"
        "down 4"
        "down 4"
        "down 9"
        "down 3"
        "up 9"
        "forward 7"
        "down 7"
        "forward 6"
        "down 2"
        "down 9"
        "forward 4"
        "forward 1"
        "forward 4"
        "down 5"
        "forward 7"
        "down 9"
        "down 8"
        "forward 9"
        "forward 1"
        "down 9"
        "forward 6"
        "up 5"
        "forward 9"
        "down 1"
        "down 5"
        "forward 4"
        "forward 5"
        "forward 8"
        "down 5"
        "forward 9"
        "down 6"
        "down 2"
        "up 4"
        "up 8"
        "forward 3"
        "forward 4"
        "down 3"
        "forward 4"
        "up 6"
        "forward 3"
        "forward 8"
        "forward 7"
        "down 1"
        "down 9"
        "down 8"
        "down 8"
        "down 1"
        "forward 9"
        "up 4"
        "down 5"
        "forward 7"
        "down 8"
        "down 3"
        "forward 9"
        "down 5"
        "forward 7"
        "forward 2"
        "down 4"
        "forward 2"
        "forward 7"
        "down 6"
        "forward 7"
        "down 2"
        "forward 9"
        "down 9"
        "forward 8"
        "forward 8"
        "down 6"
        "forward 7"
        "down 8"
        "forward 7"
        "forward 3"
        "down 1"
        "up 8"
        "down 5"
        "down 6"
        "up 5"
        "forward 5"
        "forward 5"
        "up 5"
        "up 3"
        "up 7"
        "down 6"
        "forward 8"
        "forward 4"
        "down 2"
        "up 5"
        "forward 8"
        "down 6"
        "forward 4"
        "forward 2"
        "up 8"
        "down 8"
        "down 5"
        "down 4"
        "forward 9"
        "forward 9"
        "forward 6"
        "forward 6"
        "down 3"
        "up 1"
        "down 4"
        "down 8"
        "down 9"
        "down 1"
        "forward 3"
        "forward 1"
        "down 9"
        "down 3"
        "down 7"
        "forward 6"
        "forward 9"
        "down 8"
        "down 8"
        "forward 6"
        "forward 1"
        "down 3"
        "forward 1"
        "down 8"
        "down 3"
        "down 9"
        "up 1"
        "forward 6"
        "up 2"
        "down 3"
        "forward 4"
        "forward 2"
        "up 2"
        "down 5"
        "forward 1"
        "down 3"
        "forward 9"
        "forward 4"
        "forward 6"
        "down 3"
        "forward 7"
        "down 6"
        "up 3"
        "up 7"
        "up 5"
        "down 4"
        "forward 4"
        "up 1"
        "forward 7"
        "up 9"
        "forward 3"
        "up 1"
        "down 3"
        "down 4"
        "forward 4"
        "up 3"
        "down 6"
        "down 9"
        "down 6"
        "forward 4"
        "down 9"
        "down 6"
        "forward 4"
        "forward 3"
        "down 3"
        "up 7"
        "down 9"
        "forward 8"  
    |]

type Input = string seq

type Distance = Distance of int32
type Instruction =
    | Forward of Distance
    | Up of Distance
    | Down of Distance

type Position =
    | Unaimed of 
        {|
            x : int32
            y : int32
        |}
    | Aimed of 
        {|
            x : int32
            y : int32
            aim : int32
        |}

type HashedPosition = int32

type ConvertInputToInstructions = Input -> Instruction seq
type MovePosition = Position -> Instruction -> Position
type ExecuteInstructions = Position -> MovePosition -> Instruction seq -> Position
type HashPosition = Position -> HashedPosition

type Answer = Input -> HashedPosition

let StartingUnaimedPosition = 
    Unaimed
        {|
            x = 0
            y = 0
        |}

let StartingAimedPosition =
    Aimed
        {|
            x = 0
            y = 0
            aim = 0
        |}


let move : MovePosition =
    (fun position instruction ->
        match position, instruction with
        | Unaimed unaimed, Forward (Distance distance) ->
            Unaimed
                {|
                    x = unaimed.x + distance
                    y = unaimed.y
                |}
        | Unaimed unaimed, Up (Distance distance) ->
            Unaimed
                {|
                    x = unaimed.x
                    y = unaimed.y - distance
                |}
        | Unaimed unaimed, Down (Distance distance) ->
            Unaimed
                {|
                    x = unaimed.x
                    y = unaimed.y + distance
                |}
        | Aimed aimed, Forward (Distance distance) ->
            Aimed
                {|
                    x = aimed.x + distance
                    y = aimed.y + (distance * aimed.aim)
                    aim = aimed.aim
                |}
        | Aimed aimed, Up (Distance distance) ->
            Aimed
                {|
                    x = aimed.x
                    y = aimed.y
                    aim = aimed.aim - distance
                |}
        | Aimed aimed, Down (Distance distance) ->
            Aimed
                {|
                    x = aimed.x
                    y = aimed.y
                    aim = aimed.aim + distance
                |}
    )

let convertInput : ConvertInputToInstructions =
    Seq.map 
        (fun input ->
            match (input.Split ' ') with
            | [| instruction ; distance |] ->
                match instruction with
                | "forward" -> Forward (Distance (int32 distance))
                | "up" -> Up (Distance (int32 distance))
                | "down" -> Down (Distance (int32 distance))
                | _ -> failwith "Invalid instruction"
            | _ -> failwith "Invalid input"
        )
    
let executeInstructions : ExecuteInstructions =
    (fun position moveFunc instructions ->
        instructions
        |> Seq.fold moveFunc position
    )
    
let hashPosition : HashPosition =
    (fun position ->
        match position with
        | Unaimed unaimed ->
            unaimed.x * unaimed.y
        | Aimed aimed -> 
            aimed.x * aimed.y
    )
    
let day1 : Answer = 
    convertInput
    >> executeInstructions StartingUnaimedPosition move
    >> hashPosition

let day2 : Answer = 
    convertInput
    >> executeInstructions StartingAimedPosition move
    >> hashPosition

printfn "%i" (day1 example)
printfn "%i" (day1 input)
printfn "%i" (day2 example)
printfn "%i" (day2 input)
